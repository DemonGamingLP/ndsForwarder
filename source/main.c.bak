#include <3ds.h>
#include <stdio.h>
#include <string.h>
#include "nds.h"
#include "graphics.h"

void denit() {
	romfsExit();
	gfxExit();
}
void failWait(char* message) {
		printf("%s\n",message);
		printf("\x1b[21;16HPress Start to exit.");
	while (aptMainLoop()) {
		hidScanInput();
		if (hidKeysDown() & KEY_START) break; // break in order to return to hbmenu
	}
	denit();
}
Result init() {
	gfxInitDefault();
	consoleInit(GFX_BOTTOM, NULL);
	Result rc = romfsInit();
	if (R_FAILED(rc)) {
		failWait("Failed to read init romfs\n");
		return rc;
	}
	return 0;
}
int main(int argc, char **argv)
{
	
	if (R_FAILED(init()))
		return -1;

	//We don't need double buffering in this example. In this way we can draw our image only once on screen.
	gfxSetDoubleBuffering(GFX_TOP, false);
	gfxSetScreenFormat (GFX_TOP, GSP_RGB5_A1_OES );
	u16 bytesPerPixel = gspGetBytesPerPixel(GSP_RGB5_A1_OES);
	//Get the bottom screen's frame buffer
	u16 width=0;
	u16 height=0;
	u8* fb = gfxGetFramebuffer(GFX_BOTTOM, GFX_LEFT,&height,&width);
//	printf("%dx%d\n",width,height);
	
	u16 bmp[0x400]={};
	LoadIconFromNDS("romfs:/Mario Kart DS.nds",bmp);
//	memdump(stdout,"banner: ",&banner,sizeof(banner));
//	memdump(stdout,"bmp: ",&bmp,8*3);
	//Copy our image in the bottom screen's frame buffer
	//memcpy(fb, brew_bgr, brew_bgr_size);

	// for (int x=0;x<32;x++) {
	// 	memcpy(getFrameBufferLocation(fb,10+x,100,width,height,bytesPerPixel),&bmp[x*(32)],32*bytesPerPixel);//32*3);
	// }
	// Main loop
	printf("\x1b[21;16HPress Start to exit.");
	while (aptMainLoop())
	{
		//Scan all the inputs. This should be done once for each frame
		hidScanInput();

		//hidKeysDown returns information about which buttons have been just pressed (and they weren't in the previous frame)
		u32 kDown = hidKeysDown();

		if (kDown & KEY_START) break; // break in order to return to hbmenu

		// Flush and swap framebuffers
		gfxFlushBuffers();
		gfxSwapBuffers();

		//Wait for VBlank
		gspWaitForVBlank();
	}
	denit();
	return 0;
	// Exit services

}
